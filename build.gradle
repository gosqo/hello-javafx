plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'org.gosqo'
version '1.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.0'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'org.gosqo.hellojavafx'
    mainClass = 'org.gosqo.hellojavafx.HelloApplication'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.1.2')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.4.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')

    implementation 'org.glassfish.tyrus:tyrus-server:2.2.0'
    implementation 'org.glassfish.tyrus:tyrus-client:2.2.0'
    implementation 'org.glassfish.tyrus:tyrus-container-grizzly-server:2.2.0'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class': 'org.gosqo.hellojavafx.HelloApplication'
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

    options.addAll([
            '--add-modules', 'javafx.controls,javafx.fxml'
    ])

    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

// jpackage 설정 추가
task buildJPackage(type: Exec) {
    description = 'Create native package using jpackage'
    group = 'build'

    def osName = System.getProperty("os.name").toLowerCase()

    // 빌드하려는 플랫폼에 맞는 jpackage 명령어 구성
    def jpackageCommand = [
            'jpackage',
            '--name', 'HelloJavaFXApp',
            '--input', "./build/libs", // 라이브러리 위치
            '--main-class', 'org.gosqo.hellojavafx.HelloApplication',
            '--main-jar', 'hello-javafx-1.0-SNAPSHOT.jar', // 애플리케이션 JAR 파일 이름
            '--type', osName.contains("win") ? 'exe' : osName.contains("mac") ? 'dmg' : 'deb', // 플랫폼에 맞는 패키지 형식
            '--icon', 'src/main/resources/img/icon.icns', // 애플리케이션 아이콘 (필요시)
            '--java-options', '--enable-preview' // 필요한 JVM 옵션
    ]

    commandLine jpackageCommand
}

build.dependsOn buildJPackage
